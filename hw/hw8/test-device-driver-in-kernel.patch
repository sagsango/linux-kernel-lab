From 91ff85a6485217b8b37e65f7c4ac68c3ec9af11e Mon Sep 17 00:00:00 2001
From: Ubuntu <ssing214@ssing214-vm.cs.uic.edu>
Date: Sat, 15 Mar 2025 00:15:54 +0000
Subject: [PATCH] Test device deriver!

---
 init/main.c | 36 ++++++++++++++++++++++++++++++++++++
 1 file changed, 36 insertions(+)

diff --git a/init/main.c b/init/main.c
index e24b0780fdff..6be5a7c452fc 100644
--- a/init/main.c
+++ b/init/main.c
@@ -110,6 +110,7 @@
 #include <trace/events/initcall.h>
 
 #include <kunit/test.h>
+#include <linux/printk.h>
 
 static int kernel_init(void *);
 
@@ -1429,6 +1430,39 @@ void __weak free_initmem(void)
 	free_initmem_default(POISON_FREE_INITMEM);
 }
 
+static void ring_test(void) {
+	printk("------------------------------------------------------------------\n");
+	printk("BEGIN MY-RNG TEST\n");
+	printk("------------------------------------------------------------------\n");
+	// Map the area of physical memory corresponding to the device's registers
+	// (starting 0xfebf1000, size 4KB) somewhere in virtual memory at address
+	// devmem. Notice that the physical memory where the device's registers are
+	// present may be different on your computer, use lspci -v in the VM to
+	// find it
+
+	// void *devmem = ioremap(0xfebf1000, 4096);
+	void *devmem = ioremap(0xfebd1000, 4096);
+	unsigned int data = 0x0;
+	if(devmem) {
+		for(int i = 0; i < 2; i++) {
+			// seed with 0x42 by writing that value in the seed register which
+			// is located at base address + 4 bytes
+			iowrite32(0x42, devmem + 4);
+			// obtain and print 5 random numbers by reading the relevant
+			// register located at base address + 0
+			for(int j = 0; j < 5; j++) {
+				data = ioread32(devmem);
+				printk("Round %d number %d: %u", i, j, data);
+			}
+		}
+	} else {
+		printk("ERROR: cannot map device registers\n");
+	}
+	printk("------------------------------------------------------------------\n");
+	printk("END MY-RNG TEST\n");
+	printk("------------------------------------------------------------------\n");
+}
+
 static int __ref kernel_init(void *unused)
 {
 	int ret;
@@ -1463,6 +1497,8 @@ static int __ref kernel_init(void *unused)
 
 	do_sysctl_args();
 
+	ring_test(); /* HW 8 */
+
 	if (ramdisk_execute_command) {
 		ret = run_init_process(ramdisk_execute_command);
 		if (!ret)
-- 
2.43.0

