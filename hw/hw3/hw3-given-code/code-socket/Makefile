## [M1: point 1]
## Mentioned at the end of evey line
CC = gcc	# Which compiler are we using = gcc
CFLAGS += -g -O2 -Werror -Wall # what compilation flags are we using
                               # -g = debug info should be present
                               # -O2 = optimization level = 2
                               # -Wall = enable all woranings
                               # Treat all warning as errors
LDFLAGS += # Linker flags which are empty now

## [M2: point 1]
## Get the working directory where makefile is located and assign it as current directory
CUR_DIR := $(shell dirname $(realpath $(lastword $(MAKEFILE_LIST)))) 
## [M3: point 1]
## Dependencies are presnet inside currecnt directie's hidden folder .deps
DEPS_DIR := $(CUR_DIR)/.deps
## Generate the dependency file for each source file generated, and where to store them
DEPCFLAGS = -MD -MF $(DEPS_DIR)/$*.d -MP

## [M4: point 1]
## Take all the source file which are macthing the pattern *.c
SRC_FILES = $(wildcard *.c)
## [M5: point 1]
## executable name will be generated by replacing its last two char which are ".c" to null
## so source-file mysource.c will become mysource as executable
EXE_FILES = $(SRC_FILES:.c=)

## [M6: point 1]
## all and clean are make cmd not filename or executable to be generated
.PHONY: all clean

## [M7: point 1]
## final target which requires all the executables (so we have to build them for it)
all: $(EXE_FILES)
	@echo $(EXE_FILES)

## [M8: point 1]
## How to make the executable, but dont rebuild the executable in case of change in only the dependencies
%: %.c | $(DEPS_DIR)
	$(CC) $(CFLAGS) $(DEPCFLAGS) -o $@ $<

## [M9: point 1]
## create if dependency dir does not exist, and if exist we should not try to create it again
$(DEPS_DIR):
	mkdir -p $(DEPS_DIR)

## [M10: point 1]
## remove all the executables and dependencies, togather with the dependency folder itself.
clean:
	rm -f $(EXE_FILES) $(DEPS_DIR)/*.o $(DEPS_DIR)/*.d
	rmdir $(DEPS_DIR) 2>/dev/null || true
